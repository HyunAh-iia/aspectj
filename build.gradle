plugins {
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'io.freefair.aspectj.post-compile-weaving' version '5.3.0'
    id 'java'
    id 'application'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    aspectjweaver
}

repositories {
    mavenCentral()
}

aspectj {
    version = "1.9.6"
}


dependencies {
    def aspectjVersion = '1.9.6'
    def junitVersionNumber = '5.2.0'

    implementation 'org.springframework.boot:spring-boot-starter'

    //AspectJ
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework:spring-aspects'

    compile(
            [group: 'org.aspectj', name: 'aspectjrt', version: aspectjVersion],
            [group: 'org.aspectj', name: 'aspectjweaver', version: aspectjVersion],
            [group: 'org.aspectj', name: 'aspectjtools', version: aspectjVersion]
    )

    aspectjweaver 'org.aspectj:aspectjweaver'
    runtimeOnly configurations.aspectjweaver.dependencies

    // cache
    implementation 'org.springframework.boot:spring-boot-starter-cache'

    // Junit5
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.2.0')
    testCompile('org.junit.jupiter:junit-jupiter-params:5.2.0')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.2.0')
}

test {
    useJUnitPlatform()
}

application {
    applicationDefaultJvmArgs = [
            "-javaagent:${configurations.aspectjweaver.asPath}" ]
}

println "!@@@ -javaagent:${configurations.aspectjweaver.asPath}"